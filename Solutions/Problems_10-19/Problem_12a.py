'''
Created on 2012-12-06

@author: Marty
'''
'''
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''
#runtime 30 minutes for 500

import time
from math import sqrt

startTime = time.time()
n = 3
number = 0L
factorCount = 0
primeSize = 2000000L
foundAnswer = False
factors = dict()
primes = list()
prevFactors = list()

#Generates list of primes up to limit
def primes_sieve2(limit):
  a = [True] * limit  # Initialize the primality list
  a[0] = a[1] = False
    
  for (i, isprime) in enumerate(a):
    if isprime:
      yield i
      for n in xrange(2*i, limit, i):  # Mark factors non-prime        
        a[n] = False
        
def findFactors(number, primes):
  factors = dict()
  for i in range(0, len(primes)):
    power = 0
    if primes[i] <= number:
      while number % primes[i]**(power+1) == 0:
        power += 1
      factors[primes[i]] = power
    else:
      break
  return factors

while not foundAnswer:
  n += 1
  # Generate Triangle Number
  number = (n*(n+1))/2 

  if number > primeSize:    
    primeSize *= 2
    primes = list(primes_sieve2(primeSize))
  
  factorCount = 1
  #Get list of prime factors 
  if len(prevFactors) == 0:
    prevFactors = findFactors(n, primes)
  
  
  factors = findFactors(n+1, primes)
  
  for prime, factor in prevFactors.iteritems():
    factors[prime] += factor
    if prime == 2:
      factors[prime] -= 1      
    factorCount *= factors[prime]+1    
    
  prevFactors = factors

  if factorCount > 100:
    foundAnswer = True
     
print number
print "Time Elapsed: " + str(time.time() - startTime)
